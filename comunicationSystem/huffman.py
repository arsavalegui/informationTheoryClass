huffman_tree = {
    '0': {
        '0': 'A',
        '1': {
            '0': 'C',
            '1': 'D'
        }
    },
    '1': 'B',

}

codigo_binario

def binario_a_simbolos(codigo_binario, huffman_tree):
    resultado = ""
    nodo_actual = huffman_tree
    
    for bit in codigo_binario:
        if bit in nodo_actual:
            nodo_actual = nodo_actual[bit]
            if isinstance(nodo_actual, str): 
                resultado += nodo_actual
                nodo_actual = huffman_tree  
        else:
            raise ValueError("Código binario no válido")
    
    return resultado

simbolos = binario_a_simbolos(codigo_binario, huffman_tree)
print("Símbolos decodificados:", simbolos)

